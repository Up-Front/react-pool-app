// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Competitor component render of winner 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Competitor
    align="left"
    competitor={
        Object {
            "displayName": "Bob de Bouwer",
            "uid": "1",
          }
    }
    handleClick={[Function]}
    winner="1"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "left",
      "competitor": Object {
        "displayName": "Bob de Bouwer",
        "uid": "1",
      },
      "handleClick": [Function],
      "winner": "1",
    },
    "ref": null,
    "rendered": Object {
      "instance": <strong>
        Bob de Bouwer
        ðŸ‘‘
</strong>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Bob de Bouwer",
          " ðŸ‘‘",
        ],
      },
      "ref": null,
      "rendered": Array [
        "Bob de Bouwer",
        " ðŸ‘‘",
      ],
      "type": "strong",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "left",
        "competitor": Object {
          "displayName": "Bob de Bouwer",
          "uid": "1",
        },
        "handleClick": [Function],
        "winner": "1",
      },
      "ref": null,
      "rendered": Object {
        "instance": <strong>
          Bob de Bouwer
          ðŸ‘‘
</strong>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Bob de Bouwer",
            " ðŸ‘‘",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Bob de Bouwer",
          " ðŸ‘‘",
        ],
        "type": "strong",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Competitor component renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Competitor
    align="left"
    competitor={
        Object {
            "displayName": "Bob de Bouwer",
            "uid": "1",
          }
    }
    handleClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div
        align="left"
>
        <styled.img
                src={undefined}
        />
        <styled.div
                align="left"
                className="name"
                hasVote={undefined}
        >
                Bob de Bouwer
        </styled.div>
</styled.div>,
      "hasVote": undefined,
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "align": "left",
        "children": Array [
          <styled.img
            src={undefined}
/>,
          <styled.div
            align="left"
            className="name"
            hasVote={undefined}
>
            Bob de Bouwer
</styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "src": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "left",
            "children": "Bob de Bouwer",
            "className": "name",
            "hasVote": undefined,
          },
          "ref": null,
          "rendered": "Bob de Bouwer",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          align="left"
>
          <styled.img
                    src={undefined}
          />
          <styled.div
                    align="left"
                    className="name"
                    hasVote={undefined}
          >
                    Bob de Bouwer
          </styled.div>
</styled.div>,
        "hasVote": undefined,
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "left",
          "children": Array [
            <styled.img
              src={undefined}
/>,
            <styled.div
              align="left"
              className="name"
              hasVote={undefined}
>
              Bob de Bouwer
</styled.div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "src": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "left",
              "children": "Bob de Bouwer",
              "className": "name",
              "hasVote": undefined,
            },
            "ref": null,
            "rendered": "Bob de Bouwer",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
